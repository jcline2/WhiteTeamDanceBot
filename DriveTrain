package org.usfirst.frc949.EnhanceRobot;
    
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

import java.util.Vector;

public class RobotMap {
	public static CameraServer server;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveTrainSpeedController1;
    public static SpeedController driveTrainSpeedController2;
    public static SpeedController driveTrainSpeedController3;
    public static SpeedController driveTrainSpeedController4;
    public static RobotDrive driveTrainMechanumDrive;
    public static SpeedController LeftElbowServo;
    public static SpeedController RightElbowServo;
    public static SpeedController LeftShoulderServo;
    public static SpeedController RightShoulderServo;
    public static SpeedController LeftShoulder2ndServo;
    public static SpeedController RightShoulder2ndServo;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainSpeedController1 = new Talon(0);
        LiveWindow.addActuator("DriveTrain", "Speed Controller 1", (Talon) driveTrainSpeedController1);
        
        driveTrainSpeedController2 = new Talon(1);
        LiveWindow.addActuator("DriveTrain", "Speed Controller 2", (Talon) driveTrainSpeedController2);
        
        driveTrainSpeedController3 = new Talon(2);
        LiveWindow.addActuator("DriveTrain", "Speed Controller 3", (Talon) driveTrainSpeedController3);
        
        driveTrainSpeedController4 = new Talon(3);
        LiveWindow.addActuator("DriveTrain", "Speed Controller 4", (Talon) driveTrainSpeedController4);
        
        driveTrainMechanumDrive = new RobotDrive(driveTrainSpeedController3, driveTrainSpeedController1,
              driveTrainSpeedController2, driveTrainSpeedController4);
        
        driveTrainMechanumDrive.setSafetyEnabled(true);
        driveTrainMechanumDrive.setExpiration(0.1);
        driveTrainMechanumDrive.setSensitivity(0.5);
        driveTrainMechanumDrive.setMaxOutput(1.0);
        driveTrainMechanumDrive.setInvertedMotor(RobotDrive.MotorType.kFrontLeft, true);
        driveTrainMechanumDrive.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);
        armArmMotor = new Talon(5);
        LiveWindow.addActuator("Arm", "ArmMotor", (Talon) armArmMotor);
        
        clawclawMotor = new Talon(4);
        LiveWindow.addActuator("Claw", "clawMotor", (Talon) clawclawMotor);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        server = CameraServer.getInstance();
        server.setQuality(50);
        //the camera name (ex "cam0") can be found through the roborio web interface
        server.startAutomaticCapture("cam0");
    }
}
